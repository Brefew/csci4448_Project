package lib;

import java.util.Queue;
import java.util.Random;

public class PlatformHandler {
	private Queue<Platform> platforms;
	private int max_number;
	private int last_y = 0;
	private int platform_width = 32;
	private int platform_height = 32;
	private int initial_enemy_separation = 1024;
	private int generate_distance = 2056;
	private int difficulty;
	private Random generator;
	
	public PlatformHandler(long seed, int max_platform_number, int max_display_width, int difficulty) {
		int i;
		int j=0;
		int[] position;
		this.generator = new Random(seed);
		this.max_number = max_platform_number;
		this.difficulty = difficulty;
		
		// Generate initial platforms
		for (i=0; i<this.max_number; i++) {
			
		}
	}
	public int[][] getPlatforms() {
		int[][] ret = new int[this.platforms.size()][4];
		Platform temp_array[] = (Platform[]) this.platforms.toArray();
		for (int i=0; i<temp_array.length; i++) {
			int[] pos = temp_array[i].getPosition();
			int type = temp_array[i].getType();
			int status = temp_array[i].getStatus();
			ret[i][0] = pos[0];
			ret[i][1] = pos[1];
			ret[i][2] = type;
			ret[i][3] = status;
		}
		return ret;
	}
	public void updatePlatforms(int[] player_position) {
		
	}
}
